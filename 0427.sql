CREATE TABLE GROUP_TEST_JAM
(
NAME VARCHAR2(100),
GENDER VARCHAR2(100),
LECTURE VARCHAR2(100),
SCORE NUMBER
)

SELECT * FROM GROUP_TEST_JAM

INSERT INTO GROUP_TEST_JAM VALUES('김하나','남','파이썬',77)

DELETE FROM GROUP_TEST_JAM
     WHERE NAME = '임시진' 
     
SELECT LECTURE, AVG(SCORE)
FROM GROUP_TEST_JAM
GROUP BY LECTURE

SELECT LECTURE, GENDER, AVG(SCORE)
FROM GROUP_TEST_JAM
GROUP BY LECTURE

--A01 지역에서 TOP3 판매량 거래처 정보를 뽑아달라!
SELECT ACCOUNTID, SUM(QTY)
FROM KOPO_CHANNEL_RESULT
GROUP BY ACCOUNTID
ORDER BY SUM(QTY) DESC

SELECT * FROM KOPO_CHANNEL_RESULT


--A01지역의 가장 많이 판 거래처의 TOP3상품(PRODUCTGROUP) 이 무엇인지?

--STEP1: 법인/거래처별로 합계(판매량)를 구한다
    SELECT AP2ID, ACCOUNTID, SUM(QTY) AS SUM_QTY
    FROM KOPO_CHANNEL_RESULT
    GROUP BY AP2ID, ACCOUNTID
    
--STEP2: 가장 많이 판매한 거래처를 찾는다
    SELECT * FROM
    STEP1_HK
    WHERE SUM_QTY IN (
        SELECT MAX(B.SUM_QTY) AS MAX_QTY
        FROM(
        SELECT SUM_QTY FROM
        STEP1_HK
        WHERE 1=1
        AND AP2ID = 'A01'
        ORDER BY SUM_QTY DESC
        )B
    )
    
--STEP3: 지역/거래처/상품별 합계(판매량)을 조회하면서 거래처는 가장 많이 판매한 거래처만 남긴다
        SELECT AP2ID, ACCOUNTID, PRODUCT, SUM(QTY)
        FROM KOPO_CHANNEL_RESULT
        WHERE ACCOUNTID FROM 



SELECT AP2ID, PRODUCTGROUP, SUM(QTY)
FROM KOPO_CHANNEL_RESULT
WHERE 1=1
AND AP2ID = 'A01'
GROUP BY AP2ID, PRODUCTGROUP
ORDER BY SUM(QTY) DESC

SELECT A.*
FROM (
    SELECT * FROM KOPO_CHANNEL_SEASONALITY_NEW
    WHERE 1=1
    AND REGIONID = 'A01') A


--FROM절 안에 서브쿼리 작성
SELECT B.* FROM
(
    SELECT A.REGIONID,
    A.PRODUCT,
    A.YEARWEEK,
    SUBSTR(A.YEARWEEK,0,4) AS YEAR,
    SUBSTR(A.YEARWEEK,5,6) AS WEEK,
    A.QTY
    FROM KOPO_CHANNEL_SEASONALITY_NEW A
    WHERE 1=1
)B
WHERE B.WEEK = '53'

--SELECT절 서브쿼리
SELECT A.*,
    (SELECT AVG(QTY)
    FROM KOPO_CHANNEL_SEASONALITY_NEW
    WHERE REGIONID = A.REGIONID
    AND PRODUCT = A.PRODUCT
    GROUP BY A.REGIONID, A.PRODUCT) AS SUM_QTY
FROM KOPO_CHANNEL_SEASONALITY_NEW A

--FROM절서브쿼리: YEAR WEEK라는 컬럼명을 추가로 생성하고 밖에서 조회를 편하게 하는데 사용
--WHERE절 서브쿼리: RECALL 난 지역을 별도 조회 시 사용을 했다
--SELECT절 서브쿼리: 쿼리는 각 행의 컬럼 값을 사용하지만
--               각 행마다 조회를 수행하기 때문에 속도하 현저히 떨어질 수 있다(만약 100만개 행인 경우)
--               100만개의 조회쿼리가 추가로 수행됨! ->JOIN으로 대체가능
--               JOIN으로는 3스텝정도로 풀어야 하는것을 한쿼리로 끝내는 장점이 있음!



SELECT * FROM KOPO_CHANNEL_SEASONALITY_FINAL
--주차 != 53 AND 연도 >= 2015 AND 상품(PRODUCT1 및 PRODUCT2)

--조건 부여하여 테이블에 집어넣기
INSERT INTO KOPO_ST_김재민_FINAL1
(
SELECT REGIONID,
       YEARWEEK,
       PRODUCT,
       QTY
       FROM KOPO_CHANNEL_SEASONALITY_FINAL
       WHERE SUBSTR(YEARWEEK,5,6) != '53'
       AND SUBSTR(YEARWEEK,0,4) >= '2015'
       AND PRODUCT IN ('PRODUCT1','PRODUCT2')
)


SELECT REGIONID, PRODUCT,
   ROUND(AVG(QTY),0) AS AVG_QTY 
FROM KOPO_ST_김재민_FINAL1
GROUP BY REGIONID, PRODUCT




--테이블생성
CREATE TABLE KOPO_ST_김재민_FINAL1
(
REGIONID VARCHAR2(100),
YEARWEEK VARCHAR2(100),
PRODUCT VARCHAR2(100),
QTY NUMBER
)

SELECT * FROM KOPO_ST_김재민_FINAL1
ORDER BY QTY

DROP TABLE KOPO_ST_김재민_FINAL1